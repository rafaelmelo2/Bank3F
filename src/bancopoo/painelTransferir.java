
package bancopoo;
import dados.BdBanco;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import objetos.Email;
import objetos.Usuario;


public class painelTransferir extends javax.swing.JFrame {
    Usuario usuario_logado;
    Usuario destinatario;
    
    BdBanco db = new BdBanco();
    Email email2 = new Email();

    JButton botaoTransferir2;
    
    
    
    /**
     * Creates new form painelTransferir
     */
    public painelTransferir(Usuario usuario_logado, JButton botaoTransferir2) {
        ImageIcon icon = new ImageIcon("src/img/bank.png"); // Substitua pelo caminho do ícone .ico ou .png
        setIconImage(icon.getImage());
        initComponents();
        
        
        this.usuario_logado = usuario_logado;
        this.botaoTransferir2 = botaoTransferir2;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelTranf = new javax.swing.JPanel();
        labelQuantidade = new javax.swing.JLabel();
        botaoEnviar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        LabelConta = new javax.swing.JLabel();
        campoConta = new javax.swing.JTextField();
        campoQuantidade2 = new javax.swing.JTextField();
        LabelDesc = new javax.swing.JLabel();
        PanelHeaderTransf = new javax.swing.JPanel();
        LabelTransf = new javax.swing.JLabel();
        labelErro = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoDescricao = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        PanelTranf.setBackground(new java.awt.Color(255, 255, 255));
        PanelTranf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelQuantidade.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        labelQuantidade.setForeground(new java.awt.Color(38, 15, 38));
        labelQuantidade.setLabelFor(campoQuantidade2);
        labelQuantidade.setText("Quantidade:");

        botaoEnviar.setBackground(new java.awt.Color(81, 223, 132));
        botaoEnviar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botaoEnviar.setForeground(new java.awt.Color(38, 15, 38));
        botaoEnviar.setText("ENVIAR");
        botaoEnviar.setToolTipText("Realizar transferência");
        botaoEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEnviarActionPerformed(evt);
            }
        });

        botaoCancelar.setBackground(new java.awt.Color(227, 38, 54));
        botaoCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botaoCancelar.setForeground(new java.awt.Color(255, 255, 255));
        botaoCancelar.setText("CANCELAR");
        botaoCancelar.setToolTipText("Cancelar transferência");
        botaoCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        LabelConta.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        LabelConta.setForeground(new java.awt.Color(38, 15, 38));
        LabelConta.setLabelFor(campoConta);
        LabelConta.setText("Conta:");

        campoConta.setBackground(new java.awt.Color(248, 237, 248));
        campoConta.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        campoConta.setForeground(new java.awt.Color(38, 15, 38));
        campoConta.setToolTipText("N° da conta a ser transferida");
        campoConta.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(38, 15, 38)));

        campoQuantidade2.setBackground(new java.awt.Color(248, 237, 248));
        campoQuantidade2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        campoQuantidade2.setForeground(new java.awt.Color(38, 15, 38));
        campoQuantidade2.setToolTipText("Quantidade a ser transferida");
        campoQuantidade2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(38, 15, 38)));
        campoQuantidade2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoQuantidade2ActionPerformed(evt);
            }
        });

        LabelDesc.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        LabelDesc.setForeground(new java.awt.Color(38, 15, 38));
        LabelDesc.setLabelFor(campoDescricao);
        LabelDesc.setText("Descrição:");

        PanelHeaderTransf.setBackground(new java.awt.Color(51, 153, 255));

        LabelTransf.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        LabelTransf.setForeground(new java.awt.Color(255, 255, 255));
        LabelTransf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTransf.setText("Transferir");

        javax.swing.GroupLayout PanelHeaderTransfLayout = new javax.swing.GroupLayout(PanelHeaderTransf);
        PanelHeaderTransf.setLayout(PanelHeaderTransfLayout);
        PanelHeaderTransfLayout.setHorizontalGroup(
            PanelHeaderTransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderTransfLayout.createSequentialGroup()
                .addComponent(LabelTransf, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelHeaderTransfLayout.setVerticalGroup(
            PanelHeaderTransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderTransfLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(LabelTransf)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        labelErro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelErro.setForeground(new java.awt.Color(255, 51, 51));
        labelErro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelErro.setText(" ");

        campoDescricao.setBackground(new java.awt.Color(248, 237, 248));
        campoDescricao.setColumns(20);
        campoDescricao.setFont(new java.awt.Font("Calibri Light", 0, 16)); // NOI18N
        campoDescricao.setForeground(new java.awt.Color(38, 15, 38));
        campoDescricao.setRows(5);
        jScrollPane1.setViewportView(campoDescricao);

        javax.swing.GroupLayout PanelTranfLayout = new javax.swing.GroupLayout(PanelTranf);
        PanelTranf.setLayout(PanelTranfLayout);
        PanelTranfLayout.setHorizontalGroup(
            PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHeaderTransf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelTranfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelTranfLayout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTranfLayout.createSequentialGroup()
                                .addComponent(LabelDesc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTranfLayout.createSequentialGroup()
                                .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelQuantidade, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LabelConta, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoQuantidade2)
                                    .addComponent(campoConta, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))))
                        .addGap(7, 7, 7)
                        .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTranfLayout.createSequentialGroup()
                                .addComponent(labelErro, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))))
                .addContainerGap())
        );
        PanelTranfLayout.setVerticalGroup(
            PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTranfLayout.createSequentialGroup()
                .addComponent(PanelHeaderTransf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTranfLayout.createSequentialGroup()
                        .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelQuantidade)
                            .addComponent(campoQuantidade2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelConta)
                            .addComponent(campoConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanelTranfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelTranfLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(LabelDesc)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PanelTranfLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))))
                    .addGroup(PanelTranfLayout.createSequentialGroup()
                        .addComponent(labelErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelTranf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelTranf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEnviarActionPerformed
        if(campoQuantidade2.getText().isEmpty() || campoQuantidade2.getText().equals("")){
                labelErro.setForeground(new java.awt.Color(255, 51, 51));
                labelErro.setText("Campos vazios");
        }else{
            db.conectar();
            if (db.estaConectado()) {
                campoQuantidade2.setText(campoQuantidade2.getText().replace(",", "."));
                Double quantidade = Double.parseDouble(campoQuantidade2.getText());
                String conta = campoConta.getText();
                this.destinatario = db.carregaDadosDestinatarioDB(conta);
                if(this.destinatario == null || usuario_logado.getConta().equals(conta)){

                    labelErro.setText("Não é possível transferir pra sua conta ou essa conta não existe");
                    //JOptionPane.showMessageDialog(this, "Não é possível transferir pra sua conta ou essa conta não existe", "Erro", JOptionPane.ERROR_MESSAGE);
                }else{
                    int resposta = JOptionPane.showConfirmDialog(this,"Você tem certeza que deseja transferir " + quantidade + " para a conta " + conta + "?","Confirmação de Transferência",JOptionPane.YES_NO_OPTION);

                    if (resposta == JOptionPane.YES_OPTION) {
                        if (db.transferir(usuario_logado.getConta(), conta, quantidade)) {
                            String descricao = campoDescricao.getText();
                            usuario_logado.setSaldo(usuario_logado.getSaldo() - quantidade);

                            db.inserirTransacao(usuario_logado.getCpf(),  "Transferência para: " + destinatario.getNome()+ ", Conta: "+ conta + " -- " + descricao , quantidade, usuario_logado.getSaldo());


                            db.inserirTransacao(destinatario.getCpf(),  "Transferência de: " + usuario_logado.getNome() + " -- " + descricao , quantidade, destinatario.getSaldo());


                            enviarEmails(quantidade);
                            labelErro.setForeground(Color.green);
                            labelErro.setText("Transferência realizada com sucesso!");
                            botaoEnviar.setEnabled(false);
                            
                        } else {
                            labelErro.setForeground(new java.awt.Color(255, 51, 51));
                            labelErro.setText("Falha ao realizar a transferência. Conta não existente");
                        }


                    }
                }


            }

            db.desconectar();
            //this.dispose();
            botaoTransferir2.setEnabled(true);
        }
    }//GEN-LAST:event_botaoEnviarActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        this.dispose();
        botaoTransferir2.setEnabled(true);
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void campoQuantidade2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoQuantidade2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoQuantidade2ActionPerformed

    
    public void enviarEmails(Double quantidade){
        String destinatarioOrigem = usuario_logado.getEmail();
        String assuntoOrigem = "Transferência Realizada";
        String textoOrigem = "Olá " + usuario_logado.getNome() + ",\n\n"
                + "A transferência foi realizada com sucesso.\n"
                + "Valor da Transferência: R$" + quantidade + "\n"
                + "Saldo Atual: R$" + usuario_logado.getSaldo() + "\n\n"
                + "Agradecemos por escolher nossos serviços bancários.\n\n"
                + "Atenciosamente,\n"
                + "Equipe do Banco 3F";

        email2.enviaEmailSemAnexo(destinatarioOrigem, assuntoOrigem, textoOrigem);

        String destinatarioDestino = destinatario.getEmail();
        String assuntoDestino = "Recebimento de Transferência";
        String textoDestino = "Olá " + destinatario.getNome() + ",\n\n"
                + "Você recebeu uma transferência em sua conta.\n"
                + "Valor da Transferência: R$" + quantidade + "\n"
                + "Saldo Atual: R$" + destinatario.getSaldo() + "\n\n"
                + "Agradecemos por escolher nossos serviços bancários.\n\n"
                + "Atenciosamente,\n"
                + "Equipe do Banco 3F";

        email2.enviaEmailSemAnexo(destinatarioDestino, assuntoDestino, textoDestino);
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelConta;
    private javax.swing.JLabel LabelDesc;
    private javax.swing.JLabel LabelTransf;
    private javax.swing.JPanel PanelHeaderTransf;
    private javax.swing.JPanel PanelTranf;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoEnviar;
    private javax.swing.JTextField campoConta;
    private javax.swing.JTextArea campoDescricao;
    private javax.swing.JTextField campoQuantidade2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelErro;
    private javax.swing.JLabel labelQuantidade;
    // End of variables declaration//GEN-END:variables
}
